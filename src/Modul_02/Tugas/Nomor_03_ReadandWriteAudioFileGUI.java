/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Nomor_03_ReadandWriteAudioFileGUI.java
 *
 * Created on 11 Sep 18, 19:48:24
 */

package Modul_02.Tugas;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioFileFormat;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;

/**
 *
 * @author CHP_SONE
 */
public class Nomor_03_ReadandWriteAudioFileGUI extends javax.swing.JFrame {

    /** Creates new form Nomor_03_ReadandWriteAudioFileGUI */
    public Nomor_03_ReadandWriteAudioFileGUI() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pilih_audio = new javax.swing.JLabel();
        importfile = new javax.swing.JButton();
        audio_up = new javax.swing.JLabel();
        save1 = new javax.swing.JButton();
        dir = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pilih_audio.setText("Pilih File Audio");

        importfile.setText("Import");
        importfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importfileActionPerformed(evt);
            }
        });

        save1.setText("SaveTo");
        save1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(save1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dir, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(pilih_audio)
                        .addGap(96, 96, 96)
                        .addComponent(importfile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(audio_up, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE))
                .addGap(84, 84, 84))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pilih_audio)
                    .addComponent(importfile))
                .addGap(18, 18, 18)
                .addComponent(audio_up, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save1))
                .addContainerGap(78, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String audio;
    private void importfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importfileActionPerformed
        JFileChooser file= new JFileChooser();
        file.setSelectedFile(null);
        if (file.showOpenDialog(this)== file.APPROVE_OPTION) {
        audio = file.getSelectedFile().toString();
        audio = audio.replace('\\', '/');
        InputStream in;
        AudioStream audioStream= null;
            try {
                in= new FileInputStream(audio);
                audioStream= new AudioStream(in);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Nomor_03_ReadandWriteAudioFileGUI.class.getName()).log(Level.SEVERE, null, ex);
            }catch (IOException ex) {
                Logger.getLogger(Nomor_03_ReadandWriteAudioFileGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            AudioPlayer.player.start(audioStream);
            audio_up.setText(audio);
        }
}//GEN-LAST:event_importfileActionPerformed

    private void save1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save1ActionPerformed
    
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int save = chooser.showSaveDialog(this);
        if (save == chooser.APPROVE_OPTION) {
            File f = chooser.getSelectedFile();
            dir.setText(" "+chooser.getSelectedFile()+"\\");
            try {
                DataOutputStream os = new DataOutputStream(new FileOutputStream(f));
                os.writeBytes(audio);
                JOptionPane.showMessageDialog(this, "Audio Berhasil Disimpan", "Success", JOptionPane.INFORMATION_MESSAGE);

            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error!!!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
}//GEN-LAST:event_save1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Nomor_03_ReadandWriteAudioFileGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel audio_up;
    private javax.swing.JTextField dir;
    private javax.swing.JButton importfile;
    private javax.swing.JLabel pilih_audio;
    private javax.swing.JButton save;
    private javax.swing.JButton save1;
    // End of variables declaration//GEN-END:variables

}
